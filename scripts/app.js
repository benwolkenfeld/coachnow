var app = angular.module('coachNow', ['ui.bootstrap', 'coachNow.actionservice']);
//var homeUrl = "http://10.37.129.2/~benwolkenfeld/CoachNow/";  // for testing in IE on parallels
var homeUrl = "http://localhost/~benwolkenfeld/CoachNow/";

// used for the action drop down on the Actions view panel
app.controller('dropdownTaskFilterCtrl', function($scope, actionService) {

  //grab open actions from the action service and store them in scope
  actionService.actions(homeUrl + 'data/tasks.json').then(function(data) {
    $scope.tasks = data;
  });

  // actionService.setTestVal('super duper gary cooper');
  // console.log (actionService.testVal());

  $scope.status = {
    isopen: false
  };

  $scope.toggleDropdown = function($event, $scope) {
    $event.preventDefault();
    $event.stopPropagation();
    $scope.status.isopen = !$scope.status.isopen;
  };

  // list of filters here - can add more as needed
  var filter1 = {taskDue: ''};
  var filter2 = {taskDue: 'today'};
  var filter3 = {taskDue: 'tomorrow'};
  var filter4 = {taskDue: 'later'};

  $scope.setTaskFilter = function(filter) {
	  console.log("taskFilter = " + $scope.taskFilter);

	  if(filter == '1'){
	  	$scope.taskFilter = filter1;
	  } else if (filter == '2'){
	  	$scope.taskFilter = filter2;
	  } else if (filter == '3'){
		$scope.taskFilter = filter3;
	  } else if (filter == '4'){
	  	$scope.taskFilter = filter4;
	  }

	  console.log("new filter = " + $scope.taskFilter);
  };
});

// custom task filter - 1 of 3
app.filter('TasksDueToday', function () {
  return function (items) {
    var filtered = [];
    console.log("items.length = " + items.length);
    for (var i = 0; i < items.length; i++) {
      var item = items[i];
      if (item.taskDue == "today") {
        filtered.push(item);
      }
    }
    return filtered;
  }
});

// custom task filter - 2 of 3
app.filter('TasksDueTomorrow', function () {
  return function (items) {
    var filtered = [];
    console.log("items.length = " + items.length);
    for (var i = 0; i < items.length; i++) {
      var item = items[i];
      if (item.taskDue == "tomorrow") {
        filtered.push(item);
      }
    }
    return filtered;
  }
});

// custom task filter - 3 of 3
app.filter('TasksDueLater', function () {
  return function (items) {
    var filtered = [];
    console.log("items.length = " + items.length);
    for (var i = 0; i < items.length; i++) {
      var item = items[i];
      if (item.taskDue == "later") {
        filtered.push(item);
      }
    }
    return filtered;
  }
});

// used in the task list to manage the modal generated by the
// task action dropdown on each task row
// Ben Wolkenfeld, 1/4/2015 1:24 pm
app.controller('taskActionModalCtrl', function ($scope, $modal, $log) {

  // ******************* begin drop down button section *******************
  // used for drop down button on each task action row
  $scope.status = {
    isopen: false
  };

  // ??? MYSTERY MAGIC ??? //
  // how does the dropdown-toggle directive map to this function??? //
  // Ben Wolkenfeld, 12/27/2014 //

  $scope.toggleDropdown = function($event) {
    $event.preventDefault();
    $event.stopPropagation();
    $scope.status.isopen = !$scope.status.isopen;
  };
  // ******************* end drop down button section *******************

  // ******************* begin modal dialog controller section *******************
  $scope.open = function (size, selectedForm, task) {
    console.log("I'm here");
    console.log("clientFullName = " + task.clientFullName);
    console.log("taskTitle = " + task.taskTitle);
    var modalInstance = $modal.open({
      templateUrl: './modal-task-action-template.html',
      controller: 'ModalInstanceCtrl',
      size: size,
      resolve: {
        selectedForm: function () {
          return selectedForm;
        },
        task: function() {
          return task;
        }
      }
    });

    modalInstance.result.then(function () {
      // placeholder for a service call to update a the task model with the selected action
      //$scope.task = selectedItem;
    }, function () {
      $log.info('Modal dismissed at: ' + new Date());
    });
  };
  // ******************* end modal dialog controller section *******************
});

// Please note that $modalInstance represents a modal window (instance) dependency.
// It is not the same as the $modal service used above.

app.controller('ModalInstanceCtrl', function ($scope, $modalInstance, selectedForm, task) {

  //console.log('In ModalInstanceCtrl.  selectedForm = ' + selectedForm);
  $scope.selectedForm = selectedForm;
  $scope.task = task;

  $scope.ok = function () {
    $modalInstance.close();
    //$modalInstance.close($scope.selected.item);
  };

  $scope.cancel = function () {
    $modalInstance.dismiss('cancel');
  };
});
